[{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/articles/introduction.html","id":"why-to-use-the-package","dir":"Articles","previous_headings":"","what":"Why to use the package?","title":"Introduction to tidyEmoji","text":"Extracting Emoji text might easy task. especially case researchers want understand Emoji distribution presented full corpus text data, Unicode work well conjunction regular expression. (use stringr package, filter process : str_detect(text, \"\\Uhhhhhhhh\")). Part difficulty arises input Emoji Unicode specifically find many pieces text contain Emoji, daunting input existing Unicodes one one user. Another challenge Unicodes Emoji. words, even can find way filter text containing kind Unicode, might Emoji per se. tidyEmoji extracts, counts, summarizes Emoji data inheriting tidyverse style, making user experience effortless possible.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/articles/introduction.html","id":"when-to-use-the-package","dir":"Articles","previous_headings":"","what":"When to use the package?","title":"Introduction to tidyEmoji","text":"package specifically designed working Emoji-related text. ideal case analyzing Tweets, comprise Emoji time time.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/articles/introduction.html","id":"how-to-use-the-package","dir":"Articles","previous_headings":"","what":"How to use the package?","title":"Introduction to tidyEmoji","text":"section, like use 10000 Tweets Atlanta, Georgia give comprehensive introduction tidyEmoji. extra packages loaded help make plots presented vignette organized. Load data: full_text column ata_tweets actual Tweets located. First , can use emoji_summary() see many Emoji Tweets data . emoji_summary(): raw data 10000 tweets total, 2841 least one Emoji. users want filter Emoji Tweets, emoji_tweets() function specifically designed purpose. Researchers might interested finding differences (sentiment timestamp differences) Emoji non-Emoji Tweets. emoji_extract_nest/unnest() users like see many Emoji Tweet , emoji_extract_nest() can help achieve task. function preserves raw data, case ata_tweets. change adds extra list column .emoji_unicode let users see many Emoji Tweet . looking output , know immediately first two Tweets Emoji, third fourth one 1. users want see exactly Emoji Unicode , can either unnest(.emoji_unicode) simply use emoji_extract_unnest() follows: emoji_extract_unnest() filters non-Emoji Tweets outputs row number Emoji Tweet row_number column, Emoji Unicode(s) presented Tweet. .emoji_count counts many Emoji .emoji_unicode Tweet. following plot shows distribution Emoji Tweets terms many Emoji shown.  can conclude plot , Emoji Tweets 1 Emoji, much fewer Tweets 1 Emoji. top_n_emojis: top_n_emojis() counts Emojis presented entire text corpus outputs top n ones. default, n 20. top 20 Emojis ata_tweets:  Tidy plot:  Besides Emoji names, users can put actual Emoji plot:  presence Emoji, Emoji names concrete easier understood stand . Users can choose n based preferences. like output 10 popular Emojis ata_tweets:  emoji_categorize(): Emojis can categorized 10 different categories. information regard, just simply type ?category_unicode_crosswalk console. users want classify Emoji Tweet category/categories, emoji_categorize() right function use. .emoji_category added column indicating Emoji category Tweet. Tweet one category, | used separate various categories. following plot shows Emoji categories appear 20 times among Tweets:  users want see 10 total categories , separate_rows() tidyr package used separate categories based |.  see 2000 Tweets fall “Smileys & Emotion” category, second popular category “People & Body”. One caveat plot Tweets double counted, fall various categories, counted respective category. shed bit light users may use emoji_categorize() analysis, can look category corrleated . words, Emoji one category appears Tweet, Emoji categories likely appear Tweet. visualize result, graph/network visualization appropriate.","code":"library(tidyEmoji) library(ggplot2) library(dplyr) ata_tweets <- readr::read_csv(\"ata_tweets.csv.gz\") ata_tweets %>%   emoji_summary(full_text) #> # A tibble: 1 × 2 #>   emoji_tweets total_tweets #>          <int>        <int> #> 1         2841        10000 ata_tweets %>%   emoji_extract_nest(full_text) %>%   select(.emoji_unicode)  #> # A tibble: 10,000 × 1 #>    .emoji_unicode #>    <list>         #>  1 <chr [0]>      #>  2 <chr [0]>      #>  3 <chr [1]>      #>  4 <chr [1]>      #>  5 <chr [0]>      #>  6 <chr [2]>      #>  7 <chr [0]>      #>  8 <chr [0]>      #>  9 <chr [0]>      #> 10 <chr [0]>      #> # … with 9,990 more rows emoji_count_per_tweet <- ata_tweets %>%   emoji_extract_unnest(full_text)   emoji_count_per_tweet #> # A tibble: 4,166 × 3 #>    row_number .emoji_unicode .emoji_count #>         <int> <chr>                 <int> #>  1          3 😩                        1 #>  2          4 🥰                        1 #>  3          6 🏾                        1 #>  4          6 👌                        1 #>  5         11 🥰                        1 #>  6         12 🙃                        1 #>  7         15 😎                        1 #>  8         17 🥺                        1 #>  9         33 🏽                        2 #> 10         33 😩                        1 #> # … with 4,156 more rows emoji_count_per_tweet %>%   group_by(.emoji_count) %>%   summarize(n = n()) %>%   ggplot(aes(.emoji_count, n)) +   geom_col() +   scale_x_continuous(breaks = seq(1,15)) +   ggtitle(\"How many Emoji does each Emoji Tweet have?\") top_20_emojis <- ata_tweets %>%   top_n_emojis(full_text)  top_20_emojis #> # A tibble: 20 × 4 #>    emoji_name                               unicode emoji_category        n #>    <chr>                                    <chr>   <chr>             <int> #>  1 face_with_tears_of_joy                   😂      Smileys & Emotion   766 #>  2 loudly_crying_face                       😭      Smileys & Emotion   536 #>  3 medium_dark_skin_tone                    🏾      Component           249 #>  4 rofl                                     🤣      Smileys & Emotion   182 #>  5 weary                                    😩      Smileys & Emotion   170 #>  6 medium_skin_tone                         🏽      Component           154 #>  7 pleading_face                            🥺      Smileys & Emotion   148 #>  8 woozy_face                               🥴      Smileys & Emotion   136 #>  9 male_sign                                ♂️       Symbols             114 #> 10 female_sign                              ♀️       Symbols             113 #> 11 facepalm                                 🤦      People & Body       111 #> 12 smiling_face_with_hearts                 🥰      Smileys & Emotion   106 #> 13 person_shrugging                         🤷      People & Body        91 #> 14 face_with_rolling_eyes                   🙄      Smileys & Emotion    83 #> 15 100                                      💯      Smileys & Emotion    78 #> 16 heart                                    ❤️       Smileys & Emotion    66 #> 17 person_facepalming_medium_dark_skin_tone 🤦🏾      People & Body        66 #> 18 thinking                                 🤔      Smileys & Emotion    62 #> 19 heart_eyes                               😍      Smileys & Emotion    59 #> 20 folded_hands                             🙏      People & Body        57 top_20_emojis %>%   ggplot(aes(n, emoji_name, fill = emoji_category)) +   geom_col() top_20_emojis %>%   mutate(emoji_name = stringr::str_replace_all(emoji_name, \"_\", \" \"),          emoji_name = forcats::fct_reorder(emoji_name, n)) %>%   ggplot(aes(n, emoji_name, fill = emoji_category)) +   geom_col() +   labs(x = \"# of Emoji\",        y = \"Emoji name\",        fill = \"Emoji category\",        title = \"The 20 most popular Emojis\") top_20_emojis %>%   mutate(emoji_name = stringr::str_replace_all(emoji_name, \"_\", \" \"),          emoji_name = forcats::fct_reorder(emoji_name, n)) %>%   ggplot(aes(n, emoji_name, fill = emoji_category)) +   geom_col() +   geom_text(aes(label = unicode), hjust = 0.1) +   labs(x = \"# of Emoji\",        y = \"Emoji name\",        fill = \"Emoji category\",        title = \"The 20 most popular Emojis\") ata_tweets %>%   top_n_emojis(full_text, n = 10) %>%   ggplot(aes(n, emoji_name, fill = emoji_category)) +   geom_col() ata_emoji_category <- ata_tweets %>%   emoji_categorize(full_text) %>%   select(.emoji_category)  ata_emoji_category #> # A tibble: 2,841 × 1 #>    .emoji_category                           #>    <chr>                                     #>  1 Smileys & Emotion                         #>  2 Smileys & Emotion                         #>  3 Smileys & Emotion                         #>  4 Smileys & Emotion                         #>  5 Smileys & Emotion                         #>  6 Smileys & Emotion                         #>  7 Smileys & Emotion|People & Body|Component #>  8 Smileys & Emotion                         #>  9 Smileys & Emotion                         #> 10 Smileys & Emotion                         #> # … with 2,831 more rows ata_emoji_category %>%   count(.emoji_category) %>%   filter(n > 20) %>%   mutate(.emoji_category = forcats::fct_reorder(.emoji_category, n)) %>%   ggplot(aes(n, .emoji_category)) +   geom_col() ata_emoji_category %>%   tidyr::separate_rows(.emoji_category, sep = \"\\\\|\") %>%   count(.emoji_category) %>%   mutate(.emoji_category = forcats::fct_reorder(.emoji_category, n)) %>%   ggplot(aes(n, .emoji_category)) +   geom_col()"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Youzhi Yu. Author, maintainer.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yu Y (2022). tidyEmoji: Discovers Emoji Text. R package version 0.1.0.9000, https://pursuitofdatascience.github.io/tidyEmoji/.","code":"@Manual{,   title = {tidyEmoji: Discovers Emoji from Text},   author = {Youzhi Yu},   year = {2022},   note = {R package version 0.1.0.9000},   url = {https://pursuitofdatascience.github.io/tidyEmoji/}, }"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/index.html","id":"tidyemoji","dir":"","previous_headings":"","what":"Discovers Emoji from Text","title":"Discovers Emoji from Text","text":"goal tidyEmoji help R users work text data presence Emoji easy possible. common text data falls category Tweets. people tweet emotions, ideas, celebrations, etc., Emoji sometimes appears Tweets, making text rendered colorful. researchers/users want work type text, intriguing know information Emoji appearing text. help tidyEmoji, dealing Emoji ease.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Discovers Emoji from Text","text":"Please install released version tidyEmoji CRAN : Alternatively, can install latest development version Github :","code":"install.packages(\"tidyEmoji\") # install.packages(\"devtools\") devtools::install_github(\"PursuitOfDataScience/tidyEmoji\")"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Discovers Emoji from Text","text":"tweet-like dataframe created brief demostration.","code":"library(tidyEmoji) library(dplyr) tweet_df <- data.frame(tweets = c(\"I love tidyverse \\U0001f600\\U0001f603\\U0001f603\",                                   \"R is my language! \\U0001f601\\U0001f606\\U0001f605\",                                   \"This Tweet does not have Emoji!\",                                   \"Wearing a mask\\U0001f637\\U0001f637\\U0001f637\\U0001f637.\",                                   \"Emoji does not appear in all Tweets\",                                   \"A flag \\U0001f600\\U0001f3c1\"))"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/index.html","id":"emoji-tweets-summary","dir":"","previous_headings":"Usage","what":"Emoji Tweets summary","title":"Discovers Emoji from Text","text":"Emoji Tweets defined Tweets containing least one Emoji. emoji_summary(): emoji_summary() gives overview many Emoji Tweets Tweet total data . emoji_tweets(): emoji_tweets() filters non-Emoji Tweets preserving raw data structure.","code":"tweet_df %>%   emoji_summary(tweets) #> # A tibble: 1 x 2 #>   emoji_tweets total_tweets #>          <int>        <int> #> 1            4            6 tweet_df %>%   emoji_tweets(tweets) #>                                                            tweets #> 1           I love tidyverse <U+0001F600><U+0001F603><U+0001F603> #> 2          R is my language! <U+0001F601><U+0001F606><U+0001F605> #> 3 Wearing a mask<U+0001F637><U+0001F637><U+0001F637><U+0001F637>. #> 4                                 A flag <U+0001F600><U+0001F3C1>"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/index.html","id":"popular-emoji-tweets","dir":"","previous_headings":"Usage","what":"Popular Emoji Tweets","title":"Discovers Emoji from Text","text":"top_n_emojis(): top_n_emojis() returns tibble popular Emojis entire data. n many popular Emojis users want output. default, 20.","code":"tweet_df %>%   top_n_emojis(tweets, n = 2) #> # A tibble: 2 x 4 #>   emoji_name             unicode      emoji_category        n #>   <chr>                  <chr>        <chr>             <int> #> 1 face_with_medical_mask \"\\U0001f637\" Smileys & Emotion     4 #> 2 grinning               \"\\U0001f600\" Smileys & Emotion     2"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/index.html","id":"emoji-extraction","dir":"","previous_headings":"Usage","what":"Emoji extraction","title":"Discovers Emoji from Text","text":"emoji_extract_unnest(): looking tibble , three columns: row_number, .emoji_unicode, .emoji_count. row_number row Tweet located raw data. can give users global overview Emoji count. emoji_extract_nest(): emoji_extract_nest() analogous emoji_extract_unnest(), preserves raw data one extra column .emoji_unicode added.","code":"tweet_df %>%   emoji_extract_unnest(tweets) #> # A tibble: 8 x 3 #>   row_number .emoji_unicode .emoji_count #>        <int> <chr>                 <int> #> 1          1 \"\\U0001f600\"              1 #> 2          1 \"\\U0001f603\"              2 #> 3          2 \"\\U0001f601\"              1 #> 4          2 \"\\U0001f605\"              1 #> 5          2 \"\\U0001f606\"              1 #> 6          4 \"\\U0001f637\"              4 #> 7          6 \"\\U0001f3c1\"              1 #> 8          6 \"\\U0001f600\"              1 tweet_df %>%   emoji_extract_nest(tweets) #>                                                            tweets #> 1           I love tidyverse <U+0001F600><U+0001F603><U+0001F603> #> 2          R is my language! <U+0001F601><U+0001F606><U+0001F605> #> 3                                 This Tweet does not have Emoji! #> 4 Wearing a mask<U+0001F637><U+0001F637><U+0001F637><U+0001F637>. #> 5                             Emoji does not appear in all Tweets #> 6                                 A flag <U+0001F600><U+0001F3C1> #>                                           .emoji_unicode #> 1               <U+0001F600>, <U+0001F603>, <U+0001F603> #> 2               <U+0001F601>, <U+0001F606>, <U+0001F605> #> 3                                                        #> 4 <U+0001F637>, <U+0001F637>, <U+0001F637>, <U+0001F637> #> 5                                                        #> 6                             <U+0001F600>, <U+0001F3C1>"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/index.html","id":"emoji-category","dir":"","previous_headings":"Usage","what":"Emoji category","title":"Discovers Emoji from Text","text":"emoji_categorize(): Emoji Tweet categorized based Emoji(s). Emojis fall various categories, .emoji_category column | separate category. information tidyEmoji, please refer package vignette comprehensive introduction.","code":"tweet_df %>%   emoji_categorize(tweets) #> # A tibble: 4 x 2 #>   tweets                                                    .emoji_category      #>   <chr>                                                     <chr>                #> 1 \"I love tidyverse \\U0001f600\\U0001f603\\U0001f603\"         Smileys & Emotion    #> 2 \"R is my language! \\U0001f601\\U0001f606\\U0001f605\"        Smileys & Emotion    #> 3 \"Wearing a mask\\U0001f637\\U0001f637\\U0001f637\\U0001f637.\" Smileys & Emotion    #> 4 \"A flag \\U0001f600\\U0001f3c1\"                             Smileys & Emotion|F~"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/category_unicode_crosswalk.html","id":null,"dir":"Reference","previous_headings":"","what":"Emoji category, Unicode crosswalk — category_unicode_crosswalk","title":"Emoji category, Unicode crosswalk — category_unicode_crosswalk","text":"data set containing Emoji category (Activities), respective Unicodes string separated |.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/category_unicode_crosswalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emoji category, Unicode crosswalk — category_unicode_crosswalk","text":"","code":"category_unicode_crosswalk"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/category_unicode_crosswalk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Emoji category, Unicode crosswalk — category_unicode_crosswalk","text":"data frame 10 rows 2 columns: category Emoji category (10 categories ) unicodes Unicodes string Emojis belonging category per   se.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/category_unicode_crosswalk.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Emoji category, Unicode crosswalk — category_unicode_crosswalk","text":"raw data set emojis comes emoji package, processed author specific needs tidyEmoji.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_categorize.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize Emoji Tweets/text based on Emoji category — emoji_categorize","title":"Categorize Emoji Tweets/text based on Emoji category — emoji_categorize","text":"Users can use emoji_categorize see categories Emoji Tweet . function preserves input data structure, change adds extra column information Emoji category separated | one category.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_categorize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize Emoji Tweets/text based on Emoji category — emoji_categorize","text":"","code":"emoji_categorize(tweet_tbl, tweet_text)"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_categorize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorize Emoji Tweets/text based on Emoji category — emoji_categorize","text":"tweet_tbl dataframe/tibble containing tweets/text. tweet_text tweet/text column.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_categorize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorize Emoji Tweets/text based on Emoji category — emoji_categorize","text":"filtered dataframe presence Emoji , extra column .emoji_category.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_categorize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorize Emoji Tweets/text based on Emoji category — emoji_categorize","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data.frame(tweets = c(\"I love tidyverse \\U0001f600\\U0001f603\\U0001f603\",                       \"R is my language! \\U0001f601\\U0001f606\\U0001f605\",                       \"This Tweet does not have Emoji!\",                       \"Wearing a mask\\U0001f637\\U0001f637\\U0001f637.\",                       \"Emoji does not appear in all Tweets\",                       \"A flag \\U0001f600\\U0001f3c1\")) %>%          emoji_categorize(tweets) #> # A tibble: 4 × 2 #>   tweets                   .emoji_category         #>   <chr>                    <chr>                   #> 1 I love tidyverse 😀😃😃  Smileys & Emotion       #> 2 R is my language! 😁😆😅 Smileys & Emotion       #> 3 Wearing a mask😷😷😷.    Smileys & Emotion       #> 4 A flag 😀🏁              Smileys & Emotion|Flags"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_nest.html","id":null,"dir":"Reference","previous_headings":"","what":"Emoji extraction nested summary — emoji_extract_nest","title":"Emoji extraction nested summary — emoji_extract_nest","text":"function adds extra list column called .emoji_unicode original data, Emojis included.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_nest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emoji extraction nested summary — emoji_extract_nest","text":"","code":"emoji_extract_nest(tweet_tbl, tweet_text)"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_nest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emoji extraction nested summary — emoji_extract_nest","text":"tweet_tbl dataframe/tibble containing tweets/text. tweet_text tweet/text column.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_nest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emoji extraction nested summary — emoji_extract_nest","text":"original dataframe/tibble extra column collumn called .emoji_unicode.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_nest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emoji extraction nested summary — emoji_extract_nest","text":"","code":"library(dplyr) data.frame(tweets = c(\"I love tidyverse \\U0001f600\\U0001f603\\U0001f603\",                       \"R is my language! \\U0001f601\\U0001f606\\U0001f605\",                       \"This Tweet does not have Emoji!\",                       \"Wearing a mask\\U0001f637\\U0001f637\\U0001f637.\",                       \"Emoji does not appear in all Tweets\",                       \"A flag \\U0001f600\\U0001f3c1\")) %>%          emoji_extract_nest(tweets) #>                                tweets .emoji_unicode #> 1             I love tidyverse 😀😃😃     😀, 😃, 😃 #> 2            R is my language! 😁😆😅     😁, 😆, 😅 #> 3     This Tweet does not have Emoji!                #> 4               Wearing a mask😷😷😷.     😷, 😷, 😷 #> 5 Emoji does not appear in all Tweets                #> 6                         A flag 😀🏁         😀, 🏁"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_unnest.html","id":null,"dir":"Reference","previous_headings":"","what":"Emoji extraction unnested summary — emoji_extract_unnest","title":"Emoji extraction unnested summary — emoji_extract_unnest","text":"users like know many Emojis kinds Emojis Tweet , emoji_extract useful function output global summary row number Tweet containing Emoji Unicodes associated Tweet.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_unnest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emoji extraction unnested summary — emoji_extract_unnest","text":"","code":"emoji_extract_unnest(tweet_tbl, tweet_text)"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_unnest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emoji extraction unnested summary — emoji_extract_unnest","text":"tweet_tbl dataframe/tibble containing tweets/text. tweet_text tweet/text column.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_unnest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emoji extraction unnested summary — emoji_extract_unnest","text":"summary tibble original row number Emoji count.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_extract_unnest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emoji extraction unnested summary — emoji_extract_unnest","text":"","code":"library(dplyr) data.frame(tweets = c(\"I love tidyverse \\U0001f600\\U0001f603\\U0001f603\",                       \"R is my language! \\U0001f601\\U0001f606\\U0001f605\",                       \"This Tweet does not have Emoji!\",                       \"Wearing a mask\\U0001f637\\U0001f637\\U0001f637.\",                       \"Emoji does not appear in all Tweets\",                       \"A flag \\U0001f600\\U0001f3c1\")) %>%          emoji_extract_unnest(tweets) #> # A tibble: 8 × 3 #>   row_number .emoji_unicode .emoji_count #>        <int> <chr>                 <int> #> 1          1 😀                        1 #> 2          1 😃                        2 #> 3          2 😁                        1 #> 4          2 😅                        1 #> 5          2 😆                        1 #> 6          4 😷                        3 #> 7          6 🏁                        1 #> 8          6 😀                        1"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Emoji summary tibble — emoji_summary","title":"Emoji summary tibble — emoji_summary","text":"Twitter dataframe/tibble hand, nice know many Tweets contain Emojis. right time use function. worth noting matter whether Tweet one Emoji ten Emojis, function counts returns tibble summarizes number Tweets containing least one Emoji total number Tweets presented dataframe/tibble.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emoji summary tibble — emoji_summary","text":"","code":"emoji_summary(tweet_tbl, tweet_text)"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emoji summary tibble — emoji_summary","text":"tweet_tbl dataframe/tibble containing tweets/text. tweet_text tweet/text column.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emoji summary tibble — emoji_summary","text":"summary tibble including # Tweets total # Tweets least one Emoji.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emoji summary tibble — emoji_summary","text":"","code":"library(dplyr) data.frame(tweets = c(\"I love tidyverse \\U0001f600\\U0001f603\\U0001f603\",                       \"R is my language! \\U0001f601\\U0001f606\\U0001f605\",                       \"This Tweet does not have Emoji!\",                       \"Wearing a mask\\U0001f637\\U0001f637\\U0001f637.\",                       \"Emoji does not appear in all Tweets\",                       \"A flag \\U0001f600\\U0001f3c1\")) %>%          emoji_summary(tweets) #> # A tibble: 1 × 2 #>   emoji_tweets total_tweets #>          <int>        <int> #> 1            4            6"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_tweets.html","id":null,"dir":"Reference","previous_headings":"","what":"Emoji Text/Tweets Output — emoji_tweets","title":"Emoji Text/Tweets Output — emoji_tweets","text":"users just want focus Tweets containing Emoji(s), emoji_tweets filters non-Emoji rows returns rows least one Emoji.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_tweets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emoji Text/Tweets Output — emoji_tweets","text":"","code":"emoji_tweets(tweet_tbl, tweet_text)"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_tweets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emoji Text/Tweets Output — emoji_tweets","text":"tweet_tbl dataframe/tibble containing tweets/text. tweet_text tweet/text column.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_tweets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emoji Text/Tweets Output — emoji_tweets","text":"dataframe/tibble containing text least one Emoji","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_tweets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emoji Text/Tweets Output — emoji_tweets","text":"","code":"library(dplyr) data.frame(tweets = c(\"I love tidyverse \\U0001f600\\U0001f603\\U0001f603\",                       \"R is my language! \\U0001f601\\U0001f606\\U0001f605\",                       \"This Tweet does not have Emoji!\",                       \"Wearing a mask\\U0001f637\\U0001f637\\U0001f637.\",                       \"Emoji does not appear in all Tweets\",                       \"A flag \\U0001f600\\U0001f3c1\")) %>%          emoji_tweets(tweets) #>                     tweets #> 1  I love tidyverse 😀😃😃 #> 2 R is my language! 😁😆😅 #> 3    Wearing a mask😷😷😷. #> 4              A flag 😀🏁"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_unicode_crosswalk.html","id":null,"dir":"Reference","previous_headings":"","what":"Emoji name, Unicode, and Emoji category crosswalk — emoji_unicode_crosswalk","title":"Emoji name, Unicode, and Emoji category crosswalk — emoji_unicode_crosswalk","text":"data set containing Emoji name (grinning, smile), respective Unicode category. One thing note duplicated Unicodes data set, one Unicode multiple Emoji names.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_unicode_crosswalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emoji name, Unicode, and Emoji category crosswalk — emoji_unicode_crosswalk","text":"","code":"emoji_unicode_crosswalk"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_unicode_crosswalk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Emoji name, Unicode, and Emoji category crosswalk — emoji_unicode_crosswalk","text":"data frame 4536 rows 3 columns: emoji_name name Emoji per se. unicode Unicode Emoji. emoji_category category Emoji falls .","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/emoji_unicode_crosswalk.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Emoji name, Unicode, and Emoji category crosswalk — emoji_unicode_crosswalk","text":"raw data sets (emoji_name emojis) come emoji package, processed author specific needs tidyEmoji.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/tidyEmoji.html","id":null,"dir":"Reference","previous_headings":"","what":"tidyEmoji package — tidyEmoji","title":"tidyEmoji package — tidyEmoji","text":"tidy way working text containing Emoji.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/top_n_emojis.html","id":null,"dir":"Reference","previous_headings":"","what":"Getting n most popular Emojis — top_n_emojis","title":"Getting n most popular Emojis — top_n_emojis","text":"working Tweets, counting many times Emoji appears entire Tweet corpus useful. top_n_emojis comes play, handy see Emojis distributed across corpus. Tweet 10 Emojis, top_n_emojis count 10 times assign 10 Emojis respective Emoji category. interesting note Unicodes returned top_n_emojis duplicates, meaning Unicodes share various Emoji names. default, happen, users can choose duplicated_unicode = 'yes' obtain duplicated Unicodes.","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/top_n_emojis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getting n most popular Emojis — top_n_emojis","text":"","code":"top_n_emojis(tweet_tbl, tweet_text, n = 20, duplicated_unicode = \"no\")"},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/top_n_emojis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getting n most popular Emojis — top_n_emojis","text":"tweet_tbl dataframe/tibble containing tweets/text. tweet_text tweet/text column. n Top n Emojis, default 20. duplicated_unicode repetitious Unicode, . Otherwise, yes. Default .","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/top_n_emojis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getting n most popular Emojis — top_n_emojis","text":"tibble top n Emojis","code":""},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/reference/top_n_emojis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getting n most popular Emojis — top_n_emojis","text":"","code":"library(dplyr) data.frame(tweets = c(\"I love tidyverse \\U0001f600\\U0001f603\\U0001f603\",                       \"R is my language! \\U0001f601\\U0001f606\\U0001f605\",                       \"This Tweet does not have Emoji!\",                       \"Wearing a mask\\U0001f637\\U0001f637\\U0001f637.\",                       \"Emoji does not appear in all Tweets\",                       \"A flag \\U0001f600\\U0001f3c1\")) %>%          top_n_emojis(tweets, n = 2) #> # A tibble: 2 × 4 #>   emoji_name             unicode emoji_category        n #>   <chr>                  <chr>   <chr>             <int> #> 1 face_with_medical_mask 😷      Smileys & Emotion     3 #> 2 grinning               😀      Smileys & Emotion     2"},{"path":[]},{"path":"https://pursuitofdatascience.github.io/tidyEmoji/news/index.html","id":"tidyemoji-010","dir":"Changelog","previous_headings":"","what":"tidyEmoji 0.1.0","title":"tidyEmoji 0.1.0","text":"CRAN release: 2022-02-18 Initial release CRAN.","code":""}]
